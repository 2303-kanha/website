,OSS,SaaS,Comment
"Feature Risk
 - Feature Not Present
 - Features Don’t work as expected
 - Requirements Drift
 - Accessibility
 - Fashion","Submit patches
Fork Codebase Suggest/Fund Improvements ",Suggest/Fund Improvements,
"Complexity Risk
 - Technical Debt
 - Datastores
 - Versioning & Mutability","API Complexity
Build-time complexity
Runtime Resources
Administration Complexity","- API Complexity - Security considerations (firewalls, encryption) ","SaaS has apparently much lower complexity overhead than OSS.  However, security issues are often a hidden risk."
"Communication Risk Channel Risk Protocol Risks Message Risk
Invisibility Risk
Protocol Risk Learning Curve Risk Trust Risk ?","You are expected to become expert in all aspects of the software. 
Communication is generally mediated via discussion groups.
Online documentation might not be well maintained.","You are expected to become familiar with using the software.
Further expertise may be provided on a consultancy basis.",
"Coordination Risk
 - Too Many Cooks
 - Key Man Risk
 - New Starter Risk
 - Location / Timezone",Coordination is usually limited to exchanging support messages with online groups.,"Increased distribution of processes and data.
Potentially allows businesses to work together more easily.
Coordination issues extend from the in-house team to the SaaS team.   ",
"Schedule Risk  - Opportunity Risk
 - Deadline Risk
 - Funding Risk
 - Student Syndrome
 - Red Queen Risk",Keeping up with new versions is optional but expected if you want support and bug-fixes.,"Ordinarily, you are obliged to “keep up” with changes applied to the platform.  
",
Boundary / Dead End Risk   ,Depends on availability of alternatives and adherence to standards.,"Depends on availability of alternatives and adherence to standards. Likely there will be attempts to differentiate in order to generate Boundary Risk. ",
"Operational Risk
 - Reputation Risk
 - Data Theft
 - Security Risk
 - Failures 
 - SPOFs
 - Bad Actors","You assume all Operational Risk.
Paid-for support may exist to help, but it’s unlikely in most cases.
Can you trust the code you are importing?
Data Security and availability a first-party risk to mitigate On the repository for the dependencies (e.g. maven central, npm, github)","Many Operational Risk aspects are “handed” to the third party:
Is this a safe abdication of operational risk responsibilities?
What happens if risks materialise for you?  Is there remediation?
If the provider goes out of business, what happens to your processes and data?
- On the provider of the SaaS",